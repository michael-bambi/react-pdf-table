{"version":3,"file":"TableHeader.js","sourceRoot":"","sources":["../src/TableHeader.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,6BAA+B;AAC/B,uCAAqD;AACrD,iCAAmD;AAY5C,IAAM,WAAW,GAA+B,UAAC,KAAuB;IACzE,IAAA,KAAmF,IAAA,gCAAwB,EAAC,KAAK,CAAC,EAAhH,iBAAiB,uBAAA,EAAE,mBAAmB,yBAAA,EAAE,kBAAkB,wBAAA,EAAE,gBAAgB,sBAAoC,CAAC;IACvH,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAE3D,OAAO,CACL,oBAAC,mBAAQ,eACH,KAAK,IACT,GAAG,EAAE,QAAQ,EACb,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,mBAAmB,EACxC,kBAAkB,EAAE,kBAAkB,EACtC,gBAAgB,EAAE,gBAAgB,KAEjC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,EAAE,EAAE,WAAW;QAClD,OAAA,KAAK,CAAC,cAAc,CAAiB,EAAE,CAAC;YACtC,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,EAAE;gBACrB,GAAG,EAAE,WAAW;gBAChB,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,iBAAiB,EAAE,WAAW,KAAK,CAAC;gBACpC,kBAAkB,EAAE,WAAW,KAAK,aAAa,GAAG,CAAC;aACtD,CAAC;YACJ,CAAC,CAAC,IAAI;IATR,CASQ,CACT,CACQ,CACZ,CAAC;AACJ,CAAC,CAAC;AA3BW,QAAA,WAAW,eA2BtB","sourcesContent":["import { TableCellProps } from 'TableCell';\nimport { TypedReactNode } from 'Types';\nimport * as React from 'react';\nimport { TableRow, TableRowProps } from './TableRow';\nimport { getDefaultBorderIncludes } from './Utils';\n\nexport interface TableHeaderProps extends Omit<TableRowProps<never>, 'children' | 'data'> {\n  /**\n   * Only {@see TableCell} elements are valid children\n   */\n  children?: TypedReactNode<TableCellProps>;\n}\n\n/**\n * This component displays the titles for the rows.\n */\nexport const TableHeader: React.FC<TableHeaderProps> = (props: TableHeaderProps) => {\n  let { includeLeftBorder, includeBottomBorder, includeRightBorder, includeTopBorder } = getDefaultBorderIncludes(props);\n  const childrenCount = React.Children.count(props.children);\n\n  return (\n    <TableRow<never>\n      {...props}\n      key={'header'}\n      includeLeftBorder={includeLeftBorder}\n      includeBottomBorder={includeBottomBorder}\n      includeRightBorder={includeRightBorder}\n      includeTopBorder={includeTopBorder}\n    >\n      {React.Children.map(props.children, (rc, columnIndex) =>\n        React.isValidElement<TableCellProps>(rc)\n          ? React.cloneElement(rc, {\n              key: columnIndex,\n              isHeader: true,\n              fontSize: props.fontSize,\n              textAlign: props.textAlign,\n              includeLeftBorder: columnIndex === 0,\n              includeRightBorder: columnIndex !== childrenCount - 1,\n            })\n          : null\n      )}\n    </TableRow>\n  );\n};\n"]}