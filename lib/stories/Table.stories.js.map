{"version":3,"file":"Table.stories.js","sourceRoot":"","sources":["../../stories/Table.stories.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAwC;AACxC,gDAAgE;AAEhE,+BAA0B;AAC1B,8BAWgB;AAEhB,IAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AA8B9E,IAAM,QAAQ,GAAG,UAAC,EAeN;IAdV,IAAA,cAAc,oBAAA,EACd,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,oBAAoB,0BAAA,EACpB,qBAAqB,2BAAA,EACrB,gBAAgB,sBAAA,EAChB,mBAAmB,yBAAA,EACnB,iBAAiB,uBAAA,EACjB,kBAAkB,wBAAA,EAClB,kBAAiB,EAAjB,UAAU,mBAAG,IAAI,KAAA,EACjB,YAAY,kBAAA,EACT,IAAI,cAdS,2OAejB,CADQ;IAEP,IAAM,SAAS,GAAG;QAChB,QAAQ,UAAA;QACR,SAAS,WAAA;QACT,gBAAgB,kBAAA;QAChB,mBAAmB,qBAAA;QACnB,iBAAiB,mBAAA;QACjB,kBAAkB,oBAAA;KACnB,CAAC;IACF,OAAO,CACL,8BAAC,oBAAS,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;QACjD,8BAAC,mBAAQ;YACP,8BAAC,eAAI,IAAC,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,IAAI,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE;gBAC7F,8BAAC,WAAK,eAAK,IAAI;oBACZ,YAAY;oBACZ,UAAU,IAAI,CAAC,YAAY,IAAI,CAC9B,8BAAC,iBAAW,eAAK,SAAS;wBACxB,8BAAC,eAAS,IAAC,SAAS,EAAE,oBAAoB,iBAAwB;wBAClE,8BAAC,eAAS,IAAC,SAAS,EAAE,qBAAqB,gBAAuB;wBAClE,8BAAC,eAAS,cAAgB;wBAC1B,8BAAC,eAAS,kBAAoB;wBAC9B,8BAAC,eAAS,uBAAyB,CACvB,CACf;oBACD,8BAAC,eAAS,eAAY,SAAS;wBAC7B,8BAAC,mBAAa,IAAQ,SAAS,EAAE,oBAAoB,EAAE,UAAU,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,EAAX,CAAW,GAAI;wBACzF,8BAAC,mBAAa,IAAQ,SAAS,EAAE,qBAAqB,EAAE,UAAU,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,GAAI;wBACzF,8BAAC,mBAAa,IAAQ,UAAU,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,EAAL,CAAK,GAAI;wBAClD,8BAAC,mBAAa,IAAQ,UAAU,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,OAAO,EAAT,CAAS,GAAI;wBACtD,8BAAC,mBAAa,IAAQ,UAAU,EAAE,cAAc,GAAI,CAC1C,CACN,CACH,CACE,CACD,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,IAAI,GAAS;IACjB,KAAK,EAAE,OAAO;IACd,SAAS,EAAE,QAAQ;IACnB,UAAU,EAAE;QACV,QAAQ,EAAE;YACR,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,CAAC,UAAU,EAAE,gBAAgB,EAAE,cAAc,CAAC;SACxD;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,IAAI;QACd,WAAW,EAAE,UAAU;QACvB,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,MAAM;KAClB;IACD,QAAQ,EAAE;QACR,SAAS,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE,WAAW,EAAE,gCAAgC,EAAE;QACrH,QAAQ,EAAE,EAAE,WAAW,EAAE,sCAAsC,EAAE;QACjE,KAAK,EAAE,EAAE,WAAW,EAAE,2CAA2C,EAAE;QACnE,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,kDAAkD,EAAE;QACnG,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,iDAAiD,EAAE;QACjG,QAAQ,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,8CAA8C,EAAE;QAC/G,WAAW,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE,WAAW,EAAE,8CAA8C,EAAE;QACnI,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,qCAAqC,EAAE;KAC7E;CACF,CAAC;AACF,kBAAe,IAAI,CAAC;AAEP,QAAA,WAAW,GAAU,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpD,mBAAW,CAAC,IAAI,GAAG;IACjB,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;SACZ,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,cAAM,OAAA,CAAC;QACV,SAAS,EAAE,aAAK,CAAC,IAAI,CAAC,SAAS,EAAE;QACjC,QAAQ,EAAE,aAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/B,GAAG,EAAE,aAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QACxD,OAAO,EAAE,aAAK,CAAC,OAAO,CAAC,OAAO,EAAE;QAChC,IAAI,EAAE,aAAK,CAAC,OAAO,CAAC,IAAI,EAAE;QAC1B,WAAW,EAAE,aAAK,CAAC,KAAK,CAAC,MAAM,EAAE;KAClC,CAAC,EAPS,CAOT,CAAC;IACL,cAAc,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,EAAb,CAAa;CACrC,CAAC;AAEW,QAAA,YAAY,GAAU,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrD,oBAAY,CAAC,IAAI,GAAG;IAClB,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;SACZ,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,cAAM,OAAA,CAAC;QACV,SAAS,EAAE,aAAK,CAAC,IAAI,CAAC,SAAS,EAAE;QACjC,QAAQ,EAAE,aAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/B,GAAG,EAAE,aAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QACxD,OAAO,EAAE,aAAK,CAAC,OAAO,CAAC,OAAO,EAAE;QAChC,IAAI,EAAE,aAAK,CAAC,OAAO,CAAC,IAAI,EAAE;QAC1B,YAAY,EAAE;YACZ,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YACnC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YACnC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YACrC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;SACrC;KACF,CAAC,EAZS,CAYT,CAAC;IACL,YAAY,EAAE,CACZ,8BAAC,iBAAW;QACV,8BAAC,eAAS,qBAAuB;QACjC,8BAAC,eAAS,oBAAsB;QAChC,8BAAC,eAAS,cAAgB;QAC1B,8BAAC,eAAS,kBAAoB;QAC9B,8BAAC,eAAS;YACR,8BAAC,iBAAW,IACV,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,QAAQ,EACnB,gBAAgB,EAAE,KAAK,EACvB,mBAAmB,EAAE,KAAK,EAC1B,iBAAiB,EAAE,KAAK,EACxB,kBAAkB,EAAE,KAAK;gBAEzB,8BAAC,eAAS,cAAgB;gBAC1B,8BAAC,eAAS,cAAgB;gBAC1B,8BAAC,eAAS,gBAAkB;gBAC5B,8BAAC,eAAS,eAAiB,CACf,CACJ,CACA,CACf;IACD,cAAc,EAAE,UAAC,CAAC,IAAK,OAAA,CACrB,8BAAC,WAAK,IAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,qBAAqB,EAAE,KAAK;QAC5C,8BAAC,eAAS,IACR,SAAS,EAAE,QAAQ,EACnB,gBAAgB,EAAE,KAAK,EACvB,mBAAmB,EAAE,KAAK,EAC1B,iBAAiB,EAAE,KAAK,EACxB,kBAAkB,EAAE,KAAK;YAEzB,8BAAC,mBAAa,IAAQ,UAAU,EAAE,UAAC,CAAC,YAAK,OAAA,MAAA,CAAC,CAAC,YAAY,0CAAE,GAAG,CAAA,EAAA,GAAI;YAChE,8BAAC,mBAAa,IAAQ,UAAU,EAAE,UAAC,CAAC,YAAK,OAAA,MAAA,CAAC,CAAC,YAAY,0CAAE,GAAG,CAAA,EAAA,GAAI;YAChE,8BAAC,mBAAa,IAAQ,UAAU,EAAE,UAAC,CAAC,YAAK,OAAA,MAAA,CAAC,CAAC,YAAY,0CAAE,KAAK,CAAA,EAAA,GAAI;YAClE,8BAAC,mBAAa,IAAQ,UAAU,EAAE,UAAC,CAAC,YAAK,OAAA,MAAA,CAAC,CAAC,YAAY,0CAAE,IAAI,CAAA,EAAA,GAAI,CACvD,CACN,CACT,EAfsB,CAetB;CACF,CAAC;AAEW,QAAA,wBAAwB,GAAU,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjE,gCAAwB,CAAC,IAAI,GAAG;IAC9B,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;SACZ,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,cAAM,OAAA,CAAC;QACV,SAAS,EAAE,aAAK,CAAC,IAAI,CAAC,SAAS,EAAE;QACjC,QAAQ,EAAE,aAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/B,GAAG,EAAE,aAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QACxD,OAAO,EAAE,aAAK,CAAC,OAAO,CAAC,OAAO,EAAE;QAChC,IAAI,EAAE,aAAK,CAAC,OAAO,CAAC,IAAI,EAAE;QAC1B,WAAW,EAAE,aAAK,CAAC,KAAK,CAAC,MAAM,EAAE;KAClC,CAAC,EAPS,CAOT,CAAC;IACL,cAAc,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,EAAb,CAAa;IACpC,oBAAoB,EAAE,GAAG;IACzB,qBAAqB,EAAE,GAAG;CAC3B,CAAC;AACF,gCAAwB,CAAC,QAAQ,GAAG;IAClC,oBAAoB,EAAE;QACpB,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;QAC1D,WAAW,EAAE,wEAAwE;KACtF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;QAC1D,WAAW,EAAE,wEAAwE;KACtF;CACF,CAAC;AACF,gCAAwB,CAAC,UAAU,GAAG;IACpC,QAAQ,EAAE;QACR,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,CAAC,UAAU,EAAE,aAAa,EAAE,sBAAsB,EAAE,uBAAuB,CAAC;KACtF;CACF,CAAC;AAEW,QAAA,kBAAkB,GAAU,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3D,0BAAkB,CAAC,IAAI,GAAG;IACxB,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;SACZ,IAAI,CAAC,CAAC,CAAC;SACP,GAAG,CAAC,cAAM,OAAA,CAAC;QACV,SAAS,EAAE,aAAK,CAAC,IAAI,CAAC,SAAS,EAAE;QACjC,QAAQ,EAAE,aAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/B,GAAG,EAAE,aAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QACxD,OAAO,EAAE,aAAK,CAAC,OAAO,CAAC,OAAO,EAAE;QAChC,IAAI,EAAE,aAAK,CAAC,OAAO,CAAC,IAAI,EAAE;QAC1B,WAAW,EAAE,aAAK,CAAC,KAAK,CAAC,MAAM,EAAE;KAClC,CAAC,EAPS,CAOT,CAAC;IACL,cAAc,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,EAAb,CAAa;IACpC,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE,KAAK;IACvB,mBAAmB,EAAE,KAAK;IAC1B,iBAAiB,EAAE,KAAK;IACxB,kBAAkB,EAAE,KAAK;IACzB,qBAAqB,EAAE,KAAK;CAC7B,CAAC;AACF,0BAAkB,CAAC,UAAU,GAAG;IAC9B,QAAQ,EAAE;QACR,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE;YACP,UAAU;YACV,aAAa;YACb,YAAY;YACZ,kBAAkB;YAClB,qBAAqB;YACrB,mBAAmB;YACnB,oBAAoB;YACpB,uBAAuB;SACxB;KACF;CACF,CAAC","sourcesContent":["import { faker } from '@faker-js/faker';\nimport { Document, PDFViewer, Page } from '@react-pdf/renderer';\nimport { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport {\n  DataTableCell,\n  DataTableCellProps,\n  Table,\n  TableBody,\n  TableBodyProps,\n  TableCell,\n  TableHeader,\n  TableHeaderProps,\n  TableProps,\n  TypedReactNode,\n} from '../src';\n\nconst pageSize = ['A2', 'A3', 'A4', 'A5', 'A6', 'LEGAL', 'LETTER', 'TABLOID'];\n\ntype Human = {\n  firstName: string;\n  lastName: string;\n  dob: string;\n  country: string;\n  city: string;\n  phoneNumber?: string;\n  randomValues?: {\n    one: number;\n    two: number;\n    three: number;\n    four: number;\n  };\n};\n\ntype MetaProps = TableProps & {\n  getLastContent: DataTableCellProps<Human>['getContent'];\n  orientation: 'landscape' | 'portrait';\n  pageSize: React.ComponentProps<typeof Page>['size'];\n  firstColumnWeighting: number;\n  secondColumnWeighting: number;\n  fontSize: number;\n  textAlign: 'left' | 'center' | 'right';\n  showHeader: boolean;\n  customHeader?: TypedReactNode<React.FC<TableHeaderProps>>;\n} & Pick<TableBodyProps<Human>, 'includeTopBorder' | 'includeBottomBorder' | 'includeLeftBorder' | 'includeRightBorder'>;\ntype Story = StoryObj<MetaProps>;\n\nconst Template = ({\n  getLastContent,\n  orientation,\n  pageSize,\n  fontSize,\n  textAlign,\n  firstColumnWeighting,\n  secondColumnWeighting,\n  includeTopBorder,\n  includeBottomBorder,\n  includeLeftBorder,\n  includeRightBorder,\n  showHeader = true,\n  customHeader,\n  ...args\n}: MetaProps) => {\n  const bodyProps = {\n    fontSize,\n    textAlign,\n    includeTopBorder,\n    includeBottomBorder,\n    includeLeftBorder,\n    includeRightBorder,\n  };\n  return (\n    <PDFViewer style={{ width: '100%', height: '90vh' }}>\n      <Document>\n        <Page orientation={orientation} size={pageSize ?? 'A4'} style={{ margin: 20, paddingRight: 40 }}>\n          <Table {...args}>\n            {customHeader}\n            {showHeader && !customHeader && (\n              <TableHeader {...bodyProps}>\n                <TableCell weighting={firstColumnWeighting}>First Name</TableCell>\n                <TableCell weighting={secondColumnWeighting}>Last Name</TableCell>\n                <TableCell>DOB</TableCell>\n                <TableCell>Country</TableCell>\n                <TableCell>Phone Number</TableCell>\n              </TableHeader>\n            )}\n            <TableBody<Human> {...bodyProps}>\n              <DataTableCell<Human> weighting={firstColumnWeighting} getContent={(r) => r.firstName} />\n              <DataTableCell<Human> weighting={secondColumnWeighting} getContent={(r) => r.lastName} />\n              <DataTableCell<Human> getContent={(r) => r.dob} />\n              <DataTableCell<Human> getContent={(r) => r.country} />\n              <DataTableCell<Human> getContent={getLastContent} />\n            </TableBody>\n          </Table>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nconst meta: Meta = {\n  title: 'Table',\n  component: Template,\n  parameters: {\n    controls: {\n      expanded: true,\n      exclude: ['children', 'getLastContent', 'customHeader'],\n    },\n  },\n  args: {\n    zebra: false,\n    pageSize: 'A4',\n    orientation: 'portrait',\n    fontSize: 11,\n    textAlign: 'left',\n  },\n  argTypes: {\n    textAlign: { control: 'select', options: ['left', 'center', 'right'], description: 'Text alignment for table data.' },\n    fontSize: { description: 'Font size used to render table data.' },\n    zebra: { description: 'Applies alternating row shading when set.' },\n    evenRowColor: { control: 'color', description: 'Shading applied to even rows. Overrides `zebra`.' },\n    oddRowColor: { control: 'color', description: 'Shading applied to odd rows. Overrides `zebra`.' },\n    pageSize: { control: 'select', options: pageSize, description: 'A property of the ReactPDF `Page` component.' },\n    orientation: { control: 'select', options: ['portrait', 'landscape'], description: 'A property of the ReactPDF `Page` component.' },\n    data: { control: false, description: 'The data associated with the table.' },\n  },\n};\nexport default meta;\n\nexport const SimpleTable: Story = Template.bind({});\nSimpleTable.args = {\n  data: Array(20)\n    .fill(0)\n    .map(() => ({\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      dob: faker.date.past(100).toISOString().substring(0, 10),\n      country: faker.address.country(),\n      city: faker.address.city(),\n      phoneNumber: faker.phone.number(),\n    })),\n  getLastContent: (r) => r.phoneNumber,\n};\n\nexport const NestedTables: Story = Template.bind({});\nNestedTables.args = {\n  data: Array(20)\n    .fill(0)\n    .map(() => ({\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      dob: faker.date.past(100).toISOString().substring(0, 10),\n      country: faker.address.country(),\n      city: faker.address.city(),\n      randomValues: {\n        one: Math.ceil(Math.random() * 100),\n        two: Math.ceil(Math.random() * 100),\n        three: Math.ceil(Math.random() * 100),\n        four: Math.ceil(Math.random() * 100),\n      },\n    })),\n  customHeader: (\n    <TableHeader>\n      <TableCell>First Name</TableCell>\n      <TableCell>Last Name</TableCell>\n      <TableCell>DOB</TableCell>\n      <TableCell>Country</TableCell>\n      <TableCell>\n        <TableHeader\n          fontSize={8}\n          textAlign={'center'}\n          includeTopBorder={false}\n          includeBottomBorder={false}\n          includeLeftBorder={false}\n          includeRightBorder={false}\n        >\n          <TableCell>One</TableCell>\n          <TableCell>Two</TableCell>\n          <TableCell>Three</TableCell>\n          <TableCell>Four</TableCell>\n        </TableHeader>\n      </TableCell>\n    </TableHeader>\n  ),\n  getLastContent: (r) => (\n    <Table data={[r]} topBorderWhenNoHeader={false}>\n      <TableBody\n        textAlign={'center'}\n        includeTopBorder={false}\n        includeBottomBorder={false}\n        includeLeftBorder={false}\n        includeRightBorder={false}\n      >\n        <DataTableCell<Human> getContent={(r) => r.randomValues?.one} />\n        <DataTableCell<Human> getContent={(r) => r.randomValues?.two} />\n        <DataTableCell<Human> getContent={(r) => r.randomValues?.three} />\n        <DataTableCell<Human> getContent={(r) => r.randomValues?.four} />\n      </TableBody>\n    </Table>\n  ),\n};\n\nexport const SimpleTableWithWeighting: Story = Template.bind({});\nSimpleTableWithWeighting.args = {\n  data: Array(20)\n    .fill(0)\n    .map(() => ({\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      dob: faker.date.past(100).toISOString().substring(0, 10),\n      country: faker.address.country(),\n      city: faker.address.city(),\n      phoneNumber: faker.phone.number(),\n    })),\n  getLastContent: (r) => r.phoneNumber,\n  firstColumnWeighting: 0.3,\n  secondColumnWeighting: 0.3,\n};\nSimpleTableWithWeighting.argTypes = {\n  firstColumnWeighting: {\n    control: { type: 'range', min: 0.1, max: 0.9, step: 0.05 },\n    description: 'Set the `weighting` prop on the first `TableCell` and `DataTableCell`.',\n  },\n  secondColumnWeighting: {\n    control: { type: 'range', min: 0.1, max: 0.9, step: 0.05 },\n    description: 'Set the `weighting` prop on the first `TableCell` and `DataTableCell`.',\n  },\n};\nSimpleTableWithWeighting.parameters = {\n  controls: {\n    expanded: true,\n    include: ['pageSize', 'orientation', 'firstColumnWeighting', 'secondColumnWeighting'],\n  },\n};\n\nexport const TableWithoutBorder: Story = Template.bind({});\nTableWithoutBorder.args = {\n  data: Array(20)\n    .fill(0)\n    .map(() => ({\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      dob: faker.date.past(100).toISOString().substring(0, 10),\n      country: faker.address.country(),\n      city: faker.address.city(),\n      phoneNumber: faker.phone.number(),\n    })),\n  getLastContent: (r) => r.phoneNumber,\n  showHeader: false,\n  includeTopBorder: false,\n  includeBottomBorder: false,\n  includeLeftBorder: false,\n  includeRightBorder: false,\n  topBorderWhenNoHeader: false,\n};\nTableWithoutBorder.parameters = {\n  controls: {\n    expanded: true,\n    include: [\n      'pageSize',\n      'orientation',\n      'showHeader',\n      'includeTopBorder',\n      'includeBottomBorder',\n      'includeLeftBorder',\n      'includeRightBorder',\n      'topBorderWhenNoHeader',\n    ],\n  },\n};\n"]}