{"version":3,"file":"Table.js","sourceRoot":"","sources":["../src/Table.tsx"],"names":[],"mappings":";;;AAAA,gDAA2C;AAC3C,6BAA+B;AAC/B,yCAAwC;AACxC,6CAA4C;AAUrC,IAAM,KAAK,GAAyB,UAAC,KAAK;;IAC/C,IAAI,WAAW,GAAgB,IAAI,CAAC;IACpC,IAAI,SAAS,GAAgB,IAAI,CAAC;IAElC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,CAAM;QAC5C,IAAI,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,MAAK,yBAAW,EAAE;YAC3B,WAAW,GAAG,CAAC,CAAC;SACjB;aAAM,IAAI,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,MAAK,qBAAS,EAAE;YAChC,SAAS,GAAG,CAAC,CAAC;SACf;IACH,CAAC,CAAC,CAAC;IAEH,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE;QACxC,IAAI,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,IAAI,mCAAI,KAAK,CAAC,IAAI,mCAAI,EAAE;QAC9C,eAAe,EAAE,CAAC,WAAW;QAC7B,KAAK,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,KAAK,mCAAI,KAAK,CAAC,KAAK,mCAAI,KAAK;QACpD,YAAY,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,YAAY,mCAAI,KAAK,CAAC,YAAY,mCAAI,EAAE;QACtE,WAAW,EAAE,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,WAAW,mCAAI,KAAK,CAAC,WAAW,mCAAI,EAAE;KACpE,CAAC,CAAC;IAEH,OAAO,CACL,oBAAC,eAAI,IACH,KAAK,EAAE;YACL,KAAK,EAAE,MAAM;SACd;QAEA,WAAW;QACX,SAAS,CACL,CACR,CAAC;AACJ,CAAC,CAAC;AA9BW,QAAA,KAAK,SA8BhB","sourcesContent":["import { View } from '@react-pdf/renderer';\nimport * as React from 'react';\nimport { TableBody } from './TableBody';\nimport { TableHeader } from './TableHeader';\n\nexport interface TableProps {\n  data?: any[];\n  zebra?: boolean;\n  evenRowColor?: string;\n  oddRowColor?: string;\n  children?: React.ReactNode;\n}\n\nexport const Table: React.FC<TableProps> = (props) => {\n  let tableHeader: JSX.Element = null;\n  let tableBody: JSX.Element = null;\n\n  React.Children.forEach(props.children, (c: any) => {\n    if (c?.type === TableHeader) {\n      tableHeader = c;\n    } else if (c?.type === TableBody) {\n      tableBody = c;\n    }\n  });\n\n  tableBody = React.cloneElement(tableBody, {\n    data: tableBody.props.data ?? props.data ?? [],\n    renderTopBorder: !tableHeader,\n    zebra: tableBody.props.zebra ?? props.zebra ?? false,\n    evenRowColor: tableBody.props.evenRowColor ?? props.evenRowColor ?? '',\n    oddRowColor: tableBody.props.oddRowColor ?? props.oddRowColor ?? '',\n  });\n\n  return (\n    <View\n      style={{\n        width: '100%',\n      }}\n    >\n      {tableHeader}\n      {tableBody}\n    </View>\n  );\n};\n"]}